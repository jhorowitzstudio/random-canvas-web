{"version":3,"sources":["constants/defaults.js","actions/index.js","store/store.js","reducer/index.js","components/Interface/ImageDimensions/ImageSelectorAndForm/styles/index.js","components/Interface/ImageDimensions/ImageSelectorAndForm/index.js","components/Interface/ImageDimensions/index.js","components/Interface/CanvasDimensions/CanvasForm/styles/index.js","components/Interface/CanvasDimensions/CanvasForm/index.js","components/Interface/CanvasDimensions/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/FilePreview/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/MyDropzone/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/index.js","components/Interface/ColorPickersContainer/index.js","components/Interface/index.js","helpers/canvasSizeCorrector.js","components/CanvasContainer/Canvas/index.js","helpers/imageLayer.js","components/CanvasContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","files","imageHeight","imageWidth","imageBorder","canvasHeight","canvasWidth","imageDimensionsPopup","borderColor","borderTransparent","trimHeight","trimWidth","TOGGLE_IMAGE_POPUP","SET_IMAGE_DIMENSIONS","SET_CANVAS_DIMENSIONS","TOGGLE_TRIM","SET_COLOR","SAVE_IMAGE","ADD_TO_FILES","REMOVE_FROM_FILES","TOGGLE_BORDER_TRANSPARENT","toggleBorderTransparent","type","toggleImageDimensionsPopup","setImageDimensions","dimensions","payload","setCanvasDimensions","toggleTrim","name","setColor","_ref","color","addToFiles","_ref2","_ref2$file","file","blob","removeFromFiles","_ref3","index","createStore","state","arguments","length","undefined","action","Object","objectSpread","height","width","border","defineProperty","concat","toConsumableArray","slice","window","__REDUX_DEVTOOLS_EXTENSION__","StyledForm","styled","form","_templateObject","_default","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelectChange","event","_this$props","dispatch","value","target","handleChange","_event$target","setState","prevState","formControls","submitForm","preventDefault","parseInt","_this$props2","react_default","a","createElement","style","display","flexDirection","alignItems","onSubmit","min","step","onChange","Component","connect","ImageSelectorAndForm_default","styles_templateObject","handleToggleTrim","styles_StyledForm","checked","CanvasForm_default","styles","container","marginRight","handleOnChangeComplete","colorName","hex","header","lib","onChangeComplete","React","FilePreview","alt","src","MyDropzone","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","handleUpload","result","forEach","readAsDataURL","_useDropzone","useDropzone","getRootProps","getInputProps","assign","maxWidth","borderRadius","fontSize","margin","padding","backgroundColor","ColorPickersContainer","removeHandler","handleToggleBorderTransparent","_this2","ColorPicker_Component","ColorPickersOptions_MyDropzone","gridTemplateColumns","gridColumnGap","gridRowGap","map","key","onClick","firstColor","secondColor","colorMode","colorHueMode","ColorPickersOptions","Interface","Interface_ImageDimensions","Interface_CanvasDimensions","Interface_ColorPickersContainer","save","svg","document","getElementById","serializer","XMLSerializer","xmlserializer","svgBlob","Blob","serializeToString","url","URL","createObjectURL","link","href","download","innerHTML","body","addEventListener","appendChild","canvasDim","imageDim","trimCanvasWidth","images","numberOfFiles","coordinates","xStart","yIncrement","Math","round","xIncrement","yStartMaximum","xStartMaximum","y","x","push","fileIndex","floor","random","imageLayer","id","marginBottom","_","preserveAspectRatio","aria-label","className","xlinkHref","Canvas_default","App","CanvasContainer","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.043f44bb.chunk.js","sourcesContent":["export const colorModes = {\n  rgb: '',\n  lab: '',\n  lrgb: '',\n  hsl: '',\n  lch: ''\n};\n\nexport const colorHueModes = {\n  'two-point scale': '',\n  'totally-random RGB': '',\n  'controlled-random HSL': '',\n  'choose color from multiple': ''\n};\n\nexport const initialState = {\n  files: [],\n  imageHeight: 50,\n  imageWidth: 50,\n  imageBorder: 1,\n  canvasHeight: 800,\n  canvasWidth: 1000,\n  imageDimensionsPopup: false,\n  borderColor: '#FFFFFF',\n  borderTransparent: true,\n  trimHeight: true,\n  trimWidth: true\n};\n","export const TOGGLE_IMAGE_POPUP = 'TOGGLE_IMAGE_POPUP';\nexport const SET_IMAGE_DIMENSIONS = 'SET_IMAGE_DIMENSIONS';\nexport const SET_CANVAS_DIMENSIONS = 'SET_CANVAS_DIMENSIONS';\nexport const TOGGLE_TRIM = 'TOGGLE_TRIM';\nexport const SET_COLOR = 'SET_COLOR';\nexport const SAVE_IMAGE = 'SAVE_IMAGE';\nexport const ADD_TO_FILES = 'ADD_TO_FILES';\nexport const REMOVE_FROM_FILES = 'REMOVE_FROM_FILES';\nexport const TOGGLE_BORDER_TRANSPARENT = 'TOGGLE_BORDER_TRANSPARENT';\n\nexport const toggleBorderTransparent = () => ({\n  type: TOGGLE_BORDER_TRANSPARENT\n})\nexport const toggleImageDimensionsPopup = () => ({\n  type: TOGGLE_IMAGE_POPUP\n});\n\nexport const setImageDimensions = dimensions => ({\n  type: SET_IMAGE_DIMENSIONS,\n  payload: dimensions\n});\n\nexport const setCanvasDimensions = dimensions => ({\n  type: SET_CANVAS_DIMENSIONS,\n  payload: dimensions\n});\n\nexport const toggleTrim = name => ({\n  type: TOGGLE_TRIM,\n  payload: name\n});\n\nexport const setColor = ({ name, color }) => ({\n  type: SET_COLOR,\n  payload: { name, color }\n});\n\nexport const saveImage = () => ({\n  type: SAVE_IMAGE\n});\n\nexport const addToFiles = ({ file: { name, blob } }) => ({\n  type: ADD_TO_FILES,\n  payload: { name, blob }\n});\n\nexport const removeFromFiles = ({ index }) => ({\n  type: REMOVE_FROM_FILES,\n  payload: { index }\n});\n","import { createStore } from 'redux';\nimport reducer from '../reducer';\n\nexport default createStore(\n  reducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { initialState } from '../constants/defaults';\nimport {\n  TOGGLE_IMAGE_POPUP,\n  SET_IMAGE_DIMENSIONS,\n  SET_CANVAS_DIMENSIONS,\n  TOGGLE_TRIM,\n  ADD_TO_FILES,\n  REMOVE_FROM_FILES,\n  SET_COLOR,\n  SAVE_IMAGE,\n  TOGGLE_BORDER_TRANSPARENT\n} from '../actions';\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_BORDER_TRANSPARENT:\n      return { ...state, borderTransparent: !state.borderTransparent };\n    case TOGGLE_IMAGE_POPUP:\n      return { ...state, imageDimensionsPopup: !state.imageDimensionsPopup };\n    case SET_IMAGE_DIMENSIONS:\n      return {\n        ...state,\n        imageHeight: action.payload.height || state.imageHeight,\n        imageWidth: action.payload.width || state.imageWidth,\n        imageBorder: action.payload.border\n      };\n    case SET_CANVAS_DIMENSIONS:\n      return {\n        ...state,\n        canvasHeight: action.payload.height || state.canvasHeight,\n        canvasWidth: action.payload.width || state.canvasWidth\n      };\n    case TOGGLE_TRIM:\n      return { ...state, [action.payload]: !state[action.payload] };\n    case SET_COLOR:\n      return { ...state, [action.payload.name]: action.payload.color };\n    case SAVE_IMAGE:\n      return state;\n    case ADD_TO_FILES:\n      return {\n        ...state,\n        files: [\n          ...state.files,\n          { name: action.payload.name, blob: action.payload.blob }\n        ]\n      };\n    case REMOVE_FROM_FILES:\n      return {\n        ...state,\n        files: [\n          ...state.files.slice(0, action.payload.index),\n          ...state.files.slice(action.payload.index + 1)\n        ]\n      };\n    default:\n      return state;\n  }\n}\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport {\n  toggleImageDimensionsPopup,\n  setImageDimensions\n} from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { imageHeight, imageWidth, imageBorder } = this.props;\n    this.state = {\n      formControls: {\n        imageHeight: { value: imageHeight },\n        imageWidth: { value: imageWidth },\n        imageBorder: { value: imageBorder }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { imageDimensionsPopup, dispatch } = this.props;\n    const { value } = event.target;\n    if (value === 'Custom...') {\n      dispatch(toggleImageDimensionsPopup());\n    } else {\n      if (imageDimensionsPopup === true) dispatch(toggleImageDimensionsPopup());\n      dispatch(setImageDimensions(value));\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.imageHeight.value, 10);\n    const width = parseInt(formControls.imageWidth.value, 10);\n    const border = parseInt(formControls.imageBorder.value, 10);\n    dispatch(setImageDimensions({ height, width, border }));\n  };\n\n  render() {\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Image Dimensions</h2>\n        <p>\n          <em>Images will maintain their original aspect ratio, so dimensions entered below that don&apos;t match an image&apos;s aspect ratio will create a border added to the image&apos;s height or width.</em>\n        </p>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center'\n          }}\n        >\n        </div>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Image Height</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"imageHeight\"\n              value={formControls.imageHeight.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <span>Image Width</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"imageWidth\"\n              value={formControls.imageWidth.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <span>Image Border</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"imageBorder\"\n              value={formControls.imageBorder.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImageSelectorAndForm from './ImageSelectorAndForm';\n\nconst ImageDimensions = props => <ImageSelectorAndForm {...props} />;\n\nconst mapStateToProps = ({\n  imageHeight,\n  imageWidth,\n  imageBorder,\n  imageDimensionsPopup\n}) => ({\n  imageHeight,\n  imageWidth,\n  imageBorder,\n  imageDimensionsPopup\n});\n\nexport default connect(mapStateToProps)(ImageDimensions);\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 380px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport { setCanvasDimensions, toggleTrim } from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { canvasHeight, canvasWidth } = this.props;\n    this.state = {\n      formControls: {\n        canvasHeight: { value: canvasHeight },\n        canvasWidth: { value: canvasWidth }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setCanvasDimensions(value));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  handleToggleTrim = event => {\n    const { dispatch } = this.props;\n    const { name } = event.target;\n    dispatch(toggleTrim(name));\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.canvasHeight.value, 10);\n    const width = parseInt(formControls.canvasWidth.value, 10);\n    dispatch(setCanvasDimensions({ height, width }));\n  };\n\n  render() {\n    const { trimHeight, trimWidth } = this.props;\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Canvas Dimensions</h2>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Canvas Height</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"canvasHeight\"\n              value={formControls.canvasHeight.value}\n              onChange={this.handleChange}\n            />\n            <span>Trim Height</span>\n            <input\n              type=\"checkbox\"\n              name=\"trimHeight\"\n              checked={trimHeight}\n              onChange={this.handleToggleTrim}\n            />\n          </div>\n          <div>\n            <span>Canvas Width</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"  \n              name=\"canvasWidth\"\n              value={formControls.canvasWidth.value}\n              onChange={this.handleChange}\n            />\n            <span>Trim Width</span>\n            <input\n              type=\"checkbox\"\n              name=\"trimWidth\"\n              checked={trimWidth}\n              onChange={this.handleToggleTrim}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CanvasForm from './CanvasForm';\n\nconst CanvasDimensions = props => <CanvasForm {...props} />;\n\nconst mapStateToProps = ({\n  canvasHeight,\n  canvasWidth,\n  trimHeight,\n  trimWidth\n}) => ({\n  canvasHeight,\n  canvasWidth,\n  trimHeight,\n  trimWidth\n});\n\nexport default connect(mapStateToProps)(CanvasDimensions);\n","import React from 'react';\nimport { PhotoshopPicker } from 'react-color';\nimport { setColor } from '../../../../../actions';\n\nconst styles = {\n  container: { marginRight: 20 }\n};\n\nexport default class Component extends React.Component {\n  handleOnChangeComplete = color => {\n    const { colorName, dispatch } = this.props;\n    dispatch(setColor({ name: colorName, color: color.hex }));\n  };\n\n  render() {\n    // eslint-disable-next-line react/destructuring-assignment\n    const color = this.props[this.props.colorName];\n    const { header } = this.props;\n    return (\n      <div style={styles.container}>\n        <PhotoshopPicker\n          header={header}\n          color={color}\n          onChangeComplete={this.handleOnChangeComplete}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default props => {\n  const {\n    file: { blob }\n  } = props;\n  return (\n    <div width=\"100px\" height=\"100px\">\n      <img\n        width=\"100px\"\n        height=\"100px\"\n        alt=\"preview\"\n        src={blob}\n      />\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nfunction MyDropzone(props) {\n  const onDrop = useCallback(acceptedFiles => {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log('file reading was aborted');\n    reader.onerror = () => console.log('file reading has failed');\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      props.handleUpload({ blob: reader.result });\n    };\n    acceptedFiles.forEach(file => reader.readAsDataURL(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n    /* isDragActive */\n  } = useDropzone({ onDrop });\n\n  return (\n    <button\n      type=\"button\"\n      style={{\n        maxWidth: 150,\n        border: '3px dashed black',\n        borderRadius: 20,\n        fontSize: 12,\n        margin: 10,\n        padding: 30,\n        backgroundColor: '#ccc'\n      }}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <p>Drag and drop a file here, or click to select a file</p>\n    </button>\n  );\n}\n\nexport default MyDropzone;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ColorPicker from './ColorPicker';\nimport FilePreview from './FilePreview';\nimport MyDropzone from './MyDropzone';\nimport {\n  removeFromFiles,\n  addToFiles,\n  toggleBorderTransparent\n} from '../../../../actions';\n// import styles from './styles'\n\nclass ColorPickersContainer extends React.Component {\n  removeHandler = ({ index }) => {\n    const { dispatch } = this.props;\n    dispatch(removeFromFiles({ index }));\n  };\n\n  handleUpload = ({ blob }) => {\n    const { dispatch } = this.props;\n    const name = 'image';\n    dispatch(addToFiles({ file: { name, blob } }));\n  };\n\n  handleToggleBorderTransparent = () => {\n    const { dispatch } = this.props;\n    dispatch(toggleBorderTransparent());\n  };\n\n  render() {\n    const { files, borderTransparent } = this.props;\n    return (\n      <div>\n        <h2>Background Color</h2>\n        <div style={{margin:'20px 0px'}}>\n          <span style={{margin: '0px 10px 0px 0px'}}>Transparent Border</span>\n          <input\n            type=\"checkbox\"\n            name=\"borderTransparent\"\n            checked={borderTransparent}\n            onChange={this.handleToggleBorderTransparent}\n          />\n        </div>\n        {!borderTransparent && (\n          <ColorPicker\n            colorName=\"borderColor\"\n            header=\"Border Color\"\n            {...this.props}\n          />\n        )}\n        <h2>Images</h2>\n        <MyDropzone handleUpload={this.handleUpload} />\n        <div style={{ maxWidth: 800 }}>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n              gridColumnGap: 0,\n              gridRowGap: 15\n            }}\n          >\n            {files.map((file, index) => {\n              return (\n                <div key={index + file} style={{ border: '1px solid grey' }}>\n                  <FilePreview\n                    index={index}\n                    key={index + file}\n                    file={file}\n                    {...this.props}\n                  />\n                  <button\n                    type=\"submit\"\n                    style={{ width: '100%' }}\n                    onClick={() => this.removeHandler({ index })}\n                  >\n                    delete\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  borderColor,\n  colorMode,\n  colorHueMode\n}) => ({\n  firstColor,\n  secondColor,\n  borderColor,\n  colorMode,\n  colorHueMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ColorPickersOptions from './ColorPickersOptions';\n\nconst ColorPickersContainer = props => (\n  <div>\n    <ColorPickersOptions {...props} />\n  </div>\n);\n\nconst mapStateToProps = ({ files, borderTransparent }) => ({ files, borderTransparent });\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport ImageDimensions from './ImageDimensions';\nimport CanvasDimensions from './CanvasDimensions';\nimport ColorPickersContainer from './ColorPickersContainer';\n\nexport default () => (\n  <div>\n    <ImageDimensions />\n    <CanvasDimensions />\n    <ColorPickersContainer />\n  </div>\n);\n","export const trimCanvasHeight = (canvasDim, imageDim, border) =>\n  canvasDim - (canvasDim % (imageDim + border)) - border;\n\nexport const trimCanvasWidth = (canvasDim, imageDim, border) =>\n  canvasDim - (canvasDim % (imageDim + border)) - border;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport xmlserializer from 'xmlserializer';\nimport imageLayer from '../../../helpers/imageLayer';\nimport {\n  trimCanvasWidth,\n  trimCanvasHeight\n} from '../../../helpers/canvasSizeCorrector';\n\nexport default class extends Component {\n  // save = () => {\n  //   const { files } = this.props;\n  //   const svg = document.getElementById('imagewall');\n  //   // eslint-disable-next-line no-undef\n  //   const serializer = new XMLSerializer() || xmlserializer;\n  //   const svgBlob = new Blob([serializer.serializeToString(svg)], {\n  //     type: 'image/svg+xml'\n  //   });\n\n  //   const zip = new JSZip(); // create zip\n  //   zip.file('canvas.svg', svgBlob, { base64: true }); // create canvas file\n  //   const img = zip.folder('images'); // create folder\n  //   files.forEach((file, index) => {\n  //     img.file(`${file.name} ${index}`, file.blob); // save uploaded images\n  //   });\n\n  //   zip.generateAsync({ type: 'blob' }).then(content => {\n  //     saveAs(content, 'files.zip');\n  //   });\n  //   // endzip\n  // };\n\n  save = () => {\n    const svg = document.getElementById('imagewall');\n    // eslint-disable-next-line no-undef\n    const serializer = new XMLSerializer() || xmlserializer;\n    const svgBlob = new Blob([serializer.serializeToString(svg)], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(svgBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'imagewall.svg';\n    link.innerHTML = 'Click to download';\n    function fn() {\n      document.getElementById('download-div').innerHTML = '';\n    }\n    document.body.addEventListener('click', fn, true);\n    document.getElementById('download-div').innerHTML = '';\n    document.getElementById('download-div').appendChild(link);\n  };\n\n  render() {\n    const {\n      imageHeight,\n      imageWidth,\n      imageBorder,\n      files,\n      trimHeight,\n      trimWidth,\n      borderTransparent,\n      borderColor\n    } = this.props;\n    let { canvasHeight, canvasWidth } = this.props;\n    if (trimHeight)\n      canvasHeight = trimCanvasHeight(canvasHeight, imageHeight, imageBorder);\n    if (trimWidth)\n      canvasWidth = trimCanvasWidth(canvasWidth, imageWidth, imageBorder);\n    const images = imageLayer({\n      canvasHeight,\n      canvasWidth,\n      imageHeight,\n      imageWidth,\n      imageBorder,\n      numberOfFiles: files.length\n    });\n    return (\n      <div>\n        <button type=\"submit\" onClick={this.save}>\n          Generate Download Link\n        </button>\n        <span id=\"download-div\" />\n        <div id=\"stats\">\n          <p>\n            Actual Canvas Dimensions: {canvasWidth} x {canvasHeight} height\n          </p>\n          <p>\n            Image Dimensions: {imageWidth} x {imageHeight} height, with a{' '}\n            {imageBorder} border\n          </p>\n          <button\n            style={{ marginBottom: 30 }}\n            type=\"submit\"\n            onClick={() => this.setState({ _: Math.random() })}\n          >\n            Refresh\n          </button>\n        </div>\n        <svg\n          id=\"imagewall\"\n          width={canvasWidth}\n          style={borderTransparent ? {} : { backgroundColor: borderColor }}\n          height={canvasHeight}\n          preserveAspectRatio=\"xMinYMax meet\"\n        >\n          {images &&\n            images.map(({ x, y, fileIndex }) => {\n              return (\n                <image\n                  aria-label=\"image\"\n                  className=\"image\"\n                  width={imageWidth}\n                  height={imageHeight}\n                  key={`${x}+${y}`}\n                  x={x}\n                  y={y}\n                  xlinkHref={files.length && files[fileIndex].blob}\n                  alt=\"random\"\n                />\n              );\n            })}\n        </svg>\n      </div>\n    );\n  }\n}\n","export default function imageLayer({\n  canvasHeight,\n  canvasWidth,\n  imageHeight,\n  imageWidth,\n  imageBorder,\n  numberOfFiles\n}) {\n  if (imageWidth > canvasWidth || imageHeight > canvasHeight) return false;\n  const coordinates = [];\n  const xStart = -imageWidth / 2;\n  const yIncrement = Math.round(imageHeight + imageBorder);\n  const xIncrement = Math.round(imageWidth + imageBorder);\n  const yStartMaximum = canvasHeight - imageHeight;\n  const xStartMaximum = canvasWidth;\n  const randomFileIndex = () => Math.floor(Math.random() * numberOfFiles);\n  for (let y = 0; y <= yStartMaximum; y += yIncrement) {\n    for (let x = xStart; x <= xStartMaximum; x += xIncrement) {\n      coordinates.push({\n        x: x + imageWidth / 2,\n        y,\n        fileIndex: randomFileIndex()\n      });\n    }\n  }\n  return coordinates;\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Canvas from './Canvas';\n\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Canvas</h2>\n    <Canvas {...props} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  files,\n  canvasHeight,\n  canvasWidth,\n  imageHeight,\n  imageWidth,\n  imageBorder,\n  trimHeight,\n  trimWidth,\n  borderColor,\n  borderTransparent\n}) => ({\n  files,\n  canvasHeight,\n  canvasWidth,\n  imageHeight,\n  imageWidth,\n  imageBorder,\n  trimHeight,\n  trimWidth,\n  borderColor,\n  borderTransparent\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport Interface from './components/Interface';\nimport CanvasContainer from './components/CanvasContainer';\n\nconst styles = {\n  App: {\n    margin: 15\n  }\n};\n\nfunction App() {\n  return (\n    <div style={styles.App} className=\"App\">\n      <header>\n        <h1>Image Generator</h1>\n      </header>\n      <Interface />\n      <CanvasContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}